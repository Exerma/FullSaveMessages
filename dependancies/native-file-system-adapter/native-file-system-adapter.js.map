{
  "version": 3,
  "sources": ["../src/config.js", "../src/adapters/memory.js", "../src/adapters/sandbox.js", "../src/FileSystemHandle.js", "../src/FileSystemWritableFileStream.js", "../src/FileSystemFileHandle.js", "../src/FileSystemDirectoryHandle.js", "../src/util.js", "../src/adapters/downloader.js", "../src/showDirectoryPicker.js", "../src/showOpenFilePicker.js", "../src/showSaveFilePicker.js", "../src/getOriginPrivateDirectory.js", "../src/es6.js"],
  "sourcesContent": ["const config = {\n  ReadableStream: globalThis.ReadableStream,\n  WritableStream: globalThis.WritableStream,\n  TransformStream: globalThis.TransformStream,\n  DOMException: globalThis.DOMException,\n  Blob: globalThis.Blob,\n  File: globalThis.File,\n}\n\nexport default config\n", "import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst { File, Blob, DOMException } = config\nconst { INVALID, GONE, MISMATCH, MOD_ERR, SYNTAX, SECURITY, DISALLOWED } = errors\n\nexport class Sink {\n\n  /**\n   * @param {FileHandle} fileHandle\n   * @param {File} file\n   */\n  constructor (fileHandle, file) {\n    this.fileHandle = fileHandle\n    this.file = file\n    this.size = file.size\n    this.position = 0\n  }\n\n  write (chunk) {\n    let file = this.file\n\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.position = chunk.position\n          if (this.size < chunk.position) {\n            this.file = new File(\n              [this.file, new ArrayBuffer(chunk.position - this.size)],\n              this.file.name,\n              this.file\n            )\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException(...SYNTAX('write requires a data argument'))\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          if (this.size < chunk.position) {\n            throw new DOMException(...INVALID)\n          }\n          this.position = chunk.position\n          return\n        } else {\n          throw new DOMException(...SYNTAX('seek requires a position argument'))\n        }\n      } else if (chunk.type === 'truncate') {\n        if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n          file = chunk.size < this.size\n            ? new File([file.slice(0, chunk.size)], file.name, file)\n            : new File([file, new Uint8Array(chunk.size - this.size)], file.name)\n\n          this.size = file.size\n          if (this.position > file.size) {\n            this.position = file.size\n          }\n          this.file = file\n          return\n        } else {\n          throw new DOMException(...SYNTAX('truncate requires a size argument'))\n        }\n      }\n    }\n\n    chunk = new Blob([chunk])\n\n    let blob = this.file\n    // Calc the head and tail fragments\n    const head = blob.slice(0, this.position)\n    const tail = blob.slice(this.position + chunk.size)\n\n    // Calc the padding\n    let padding = this.position - head.size\n    if (padding < 0) {\n      padding = 0\n    }\n    blob = new File([\n      head,\n      new Uint8Array(padding),\n      chunk,\n      tail\n    ], blob.name)\n\n    this.size = blob.size\n    this.position += chunk.size\n\n    this.file = blob\n  }\n  close () {\n    if (this.fileHandle._deleted) throw new DOMException(...GONE)\n    this.fileHandle._file = this.file\n    this.file =\n    this.position =\n    this.size = null\n    if (this.fileHandle.onclose) {\n      this.fileHandle.onclose(this.fileHandle)\n    }\n  }\n}\n\nexport class FileHandle {\n  constructor (name = '', file = new File([], name), writable = true) {\n    this._file = file\n    this.name = name\n    this.kind = 'file'\n    this._deleted = false\n    this.writable = writable\n    this.readable = true\n  }\n\n  async getFile () {\n    if (this._deleted) throw new DOMException(...GONE)\n    return this._file\n  }\n\n  async createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n    if (this._deleted) throw new DOMException(...GONE)\n\n    const file = opts.keepExistingData\n      ? await this.getFile()\n      : new File([], this.name)\n\n    return new Sink(this, file)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  async _destroy () {\n    this._deleted = true\n    this._file = null\n  }\n}\n\nexport class FolderHandle {\n\n  /** @param {string} name */\n  constructor (name, writable = true) {\n    this.name = name\n    this.kind = 'directory'\n    this._deleted = false\n    /** @type {Object.<string, (FolderHandle|FileHandle)>} */\n    this._entries = {}\n    this.writable = writable\n    this.readable = true\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    if (this._deleted) throw new DOMException(...GONE)\n    yield* Object.entries(this._entries)\n  }\n\n  async isSameEntry (other) {\n    return this === other\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getDirectoryHandle (name, opts) {\n    if (this._deleted) throw new DOMException(...GONE)\n    const entry = this._entries[name]\n    if (entry) { // entry exist\n      if (entry instanceof FileHandle) {\n        throw new DOMException(...MISMATCH)\n      } else {\n        return entry\n      }\n    } else {\n      if (opts.create) {\n        return (this._entries[name] = new FolderHandle(name))\n      } else {\n        throw new DOMException(...GONE)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   */\n  async getFileHandle (name, opts) {\n    const entry = this._entries[name]\n    const isFile = entry instanceof FileHandle\n    if (entry && isFile) return entry\n    if (entry && !isFile) throw new DOMException(...MISMATCH)\n    if (!entry && !opts.create) throw new DOMException(...GONE)\n    if (!entry && opts.create) {\n      return (this._entries[name] = new FileHandle(name))\n    }\n  }\n\n  async removeEntry (name, opts) {\n    const entry = this._entries[name]\n    if (!entry) throw new DOMException(...GONE)\n    await entry._destroy(opts.recursive)\n    delete this._entries[name]\n  }\n\n  async _destroy (recursive) {\n    for (let x of Object.values(this._entries)) {\n      if (!recursive) throw new DOMException(...MOD_ERR)\n      await x._destroy(recursive)\n    }\n    this._entries = {}\n    this._deleted = true\n  }\n}\n\nconst fs = new FolderHandle('')\n\nexport default () => fs\n", "/* global Blob, DOMException */\n\nimport { errors } from '../util.js'\n\nconst { DISALLOWED } = errors\n\nclass Sink {\n  /**\n   * @param {FileWriter} writer\n   * @param {FileEntry} fileEntry\n   */\n  constructor (writer, fileEntry) {\n    this.writer = writer\n    this.fileEntry = fileEntry\n  }\n\n  /**\n   * @param {BlobPart | Object} chunk\n   */\n  async write (chunk) {\n    if (typeof chunk === 'object') {\n      if (chunk.type === 'write') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            await new Promise((resolve, reject) => {\n              this.writer.onwriteend = resolve\n              this.writer.onerror = reject\n              this.writer.truncate(chunk.position)\n            })\n            this.writer.seek(chunk.position)\n          }\n        }\n        if (!('data' in chunk)) {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. write requires a data argument', 'SyntaxError')\n        }\n        chunk = chunk.data\n      } else if (chunk.type === 'seek') {\n        if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n          this.writer.seek(chunk.position)\n          if (this.writer.position !== chunk.position) {\n            throw new DOMException('seeking position failed', 'InvalidStateError')\n          }\n          return\n        } else {\n          throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. seek requires a position argument', 'SyntaxError')\n        }\n      } else if (chunk.type === 'truncate') {\n        return new Promise(resolve => {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            this.writer.onwriteend = evt => resolve()\n            this.writer.truncate(chunk.size)\n          } else {\n            throw new DOMException('Failed to execute \\'write\\' on \\'UnderlyingSinkBase\\': Invalid params passed. truncate requires a size argument', 'SyntaxError')\n          }\n        })\n      }\n    }\n    await new Promise((resolve, reject) => {\n      this.writer.onwriteend = resolve\n      this.writer.onerror = reject\n      this.writer.write(new Blob([chunk]))\n    })\n  }\n\n  close () {\n    return new Promise(this.fileEntry.file.bind(this.fileEntry))\n  }\n}\n\nexport class FileHandle {\n  /** @param {FileEntry} file */\n  constructor (file, writable = true) {\n    this.file = file\n    this.kind = 'file'\n    this.writable = writable\n    this.readable = true\n  }\n\n  get name () {\n    return this.file.name\n  }\n\n  /**\n   * @param {{ file: { toURL: () => string; }; }} other\n   */\n  isSameEntry (other) {\n    return this.file.toURL() === other.file.toURL()\n  }\n\n  /** @return {Promise<File>} */\n  getFile () {\n    return new Promise(this.file.file.bind(this.file))\n  }\n\n  /** @return {Promise<Sink>} */\n  createWritable (opts) {\n    if (!this.writable) throw new DOMException(...DISALLOWED)\n\n    return new Promise((resolve, reject) =>\n      this.file.createWriter(fileWriter => {\n        if (opts.keepExistingData === false) {\n          fileWriter.onwriteend = evt => resolve(new Sink(fileWriter, this.file))\n          fileWriter.truncate(0)\n        } else {\n          resolve(new Sink(fileWriter, this.file))\n        }\n      }, reject)\n    )\n  }\n}\n\nexport class FolderHandle {\n  /** @param {DirectoryEntry} dir */\n  constructor (dir, writable = true) {\n    this.dir = dir\n    this.writable = writable\n    this.readable = true\n    this.kind = 'directory'\n    this.name = dir.name\n  }\n\n  /** @param {FolderHandle} other */\n  isSameEntry (other) {\n    return this.dir.fullPath === other.dir.fullPath\n  }\n\n  /** @returns {AsyncGenerator<[string, FileHandle | FolderHandle]>} */\n  async * entries () {\n    const reader = this.dir.createReader()\n    const entries = await new Promise(reader.readEntries.bind(reader))\n    for (const x of entries) {\n      yield [x.name, x.isFile ? new FileHandle(x, this.writable) : new FolderHandle(x, this.writable)]\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FolderHandle>}\n   */\n  getDirectoryHandle (name, opts) {\n    return new Promise((resolve, reject) => {\n      this.dir.getDirectory(name, opts, dir => {\n        resolve(new FolderHandle(dir))\n      }, reject)\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ create: boolean; }} opts\n   * @returns {Promise<FileHandle>}\n   */\n  getFileHandle (name, opts) {\n    return new Promise((resolve, reject) =>\n      this.dir.getFile(name, opts, file => resolve(new FileHandle(file)), reject)\n    )\n  }\n\n  /**\n   * @param {string} name\n   * @param {{ recursive: boolean; }} opts\n   */\n  async removeEntry (name, opts) {\n    /** @type {Error|FolderHandle|FileHandle} */\n    const entry = await this.getDirectoryHandle(name, { create: false }).catch(err =>\n      err.name === 'TypeMismatchError' ? this.getFileHandle(name, { create: false }) : err\n    )\n\n    if (entry instanceof Error) throw entry\n\n    return new Promise((resolve, reject) => {\n      if (entry instanceof FolderHandle) {\n        opts.recursive\n          ? entry.dir.removeRecursively(() => resolve(), reject)\n          : entry.dir.remove(() => resolve(), reject)\n      } else if (entry.file) {\n        entry.file.remove(() => resolve(), reject)\n      }\n    })\n  }\n}\n\nexport default (opts = {}) => new Promise((resolve, reject) =>\n  window.webkitRequestFileSystem(\n    opts._persistent, 0,\n    e => resolve(new FolderHandle(e.root)),\n    reject\n  )\n)\n", "const kAdapter = Symbol('adapter')\n\n/**\n * @typedef {Object} FileSystemHandlePermissionDescriptor\n * @property {('read'|'readwrite')} [mode='read']\n */\nclass FileSystemHandle {\n  /** @type {FileSystemHandle} */\n  [kAdapter]\n\n  /** @type {string} */\n  name\n  /** @type {('file'|'directory')} */\n  kind\n\n  /** @param {FileSystemHandle & {writable}} adapter */\n  constructor (adapter) {\n    this.kind = adapter.kind\n    this.name = adapter.name\n    this[kAdapter] = adapter\n  }\n\n  /** @param {FileSystemHandlePermissionDescriptor} descriptor */\n  async queryPermission (descriptor = {}) {\n    const { mode = 'read' } = descriptor\n    const handle = this[kAdapter]\n\n    if (handle.queryPermission) {\n      return handle.queryPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  async requestPermission ({mode = 'read'} = {}) {\n    const handle = this[kAdapter]\n    if (handle.requestPermission) {\n      return handle.requestPermission({mode})\n    }\n\n    if (mode === 'read') {\n      return 'granted'\n    } else if (mode === 'readwrite') {\n      return handle.writable ? 'granted' : 'denied'\n    } else {\n      throw new TypeError(`Mode ${mode} must be 'read' or 'readwrite'`)\n    }\n  }\n\n  /**\n   * Attempts to remove the entry represented by handle from the underlying file system.\n   *\n   * @param {object} options\n   * @param {boolean} [options.recursive=false]\n   */\n  async remove (options = {}) {\n    await this[kAdapter].remove(options)\n  }\n\n  /**\n   * @param {FileSystemHandle} other\n   */\n  async isSameEntry (other) {\n    if (this === other) return true\n    if (\n      (!other) ||\n      (typeof other !== 'object') ||\n      (this.kind !== other.kind) ||\n      (!other[kAdapter])\n    ) return false\n    return this[kAdapter].isSameEntry(other[kAdapter])\n  }\n}\n\nObject.defineProperty(FileSystemHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\n// Safari safari doesn't support writable streams yet.\nif (globalThis.FileSystemHandle) {\n  globalThis.FileSystemHandle.prototype.queryPermission ??= function (descriptor) {\n    return 'granted'\n  }\n}\n\nexport default FileSystemHandle\nexport { FileSystemHandle }\n", "import config from './config.js'\n\nconst { WritableStream } = config\n\nclass FileSystemWritableFileStream extends WritableStream {\n  #writer\n  constructor (writer) {\n    super(writer)\n    this.#writer = writer\n    // Stupid Safari hack to extend native classes\n    // https://bugs.webkit.org/show_bug.cgi?id=226201\n    Object.setPrototypeOf(this, FileSystemWritableFileStream.prototype)\n\n    /** @private */\n    this._closed = false\n  }\n\n  async close () {\n    this._closed = true\n    const w = this.getWriter()\n    const p = w.close()\n    w.releaseLock()\n    return p\n    // return super.close ? super.close() : this.getWriter().close()\n  }\n\n  /** @param {number} position */\n  seek (position) {\n    return this.write({ type: 'seek', position })\n  }\n\n  /** @param {number} size */\n  truncate (size) {\n    return this.write({ type: 'truncate', size })\n  }\n\n  // The write(data) method steps are:\n  write (data) {\n    if (this._closed) {\n      return Promise.reject(new TypeError('Cannot write to a CLOSED writable stream'))\n    }\n\n    // 1. Let writer be the result of getting a writer for this.\n    const writer = this.getWriter()\n\n    // 2. Let result be the result of writing a chunk to writer given data.\n    const result = writer.write(data)\n\n    // 3. Release writer.\n    writer.releaseLock()\n\n    // 4. Return result.\n    return result\n  }\n}\n\nObject.defineProperty(FileSystemWritableFileStream.prototype, Symbol.toStringTag, {\n  value: 'FileSystemWritableFileStream',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemWritableFileStream.prototype, {\n  close: { enumerable: true },\n  seek: { enumerable: true },\n  truncate: { enumerable: true },\n  write: { enumerable: true }\n})\n\n// Safari safari doesn't support writable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable &&\n  !globalThis.FileSystemWritableFileStream\n) {\n  globalThis.FileSystemWritableFileStream = FileSystemWritableFileStream\n}\n\nexport default FileSystemWritableFileStream\nexport { FileSystemWritableFileStream }\n", "import FileSystemHandle from './FileSystemHandle.js'\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\nimport { errors } from './util.js'\n\nconst { INVALID, SYNTAX, GONE } = errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemFileHandle extends FileSystemHandle {\n  /** @type {FileSystemFileHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param  {Object} [options={}]\n   * @param  {boolean} [options.keepExistingData]\n   * @returns {Promise<FileSystemWritableFileStream>}\n   */\n  async createWritable (options = {}) {\n    return new FileSystemWritableFileStream(\n      await this[kAdapter].createWritable(options)\n    )\n  }\n\n  /**\n   * @returns {Promise<File>}\n   */\n  async getFile () {\n    return this[kAdapter].getFile()\n  }\n}\n\nObject.defineProperty(FileSystemFileHandle.prototype, Symbol.toStringTag, {\n  value: 'FileSystemFileHandle',\n  writable: false,\n  enumerable: false,\n  configurable: true\n})\n\nObject.defineProperties(FileSystemFileHandle.prototype, {\n  createWritable: { enumerable: true },\n  getFile: { enumerable: true }\n})\n\n// Safari doesn't support async createWritable streams yet.\nif (\n  globalThis.FileSystemFileHandle &&\n  !globalThis.FileSystemFileHandle.prototype.createWritable\n) {\n  const wm = new WeakMap()\n\n  let workerUrl\n\n  // Worker code that should be inlined (can't use any external functions)\n  function code () {\n    let fileHandle, handle\n\n    onmessage = async evt => {\n      const port = evt.ports[0]\n      const cmd = evt.data\n      switch (cmd.type) {\n        case 'open':\n          const file = cmd.name\n\n          let dir = await navigator.storage.getDirectory()\n\n          for (const folder of cmd.path) {\n            dir = await dir.getDirectoryHandle(folder)\n          }\n\n          fileHandle = await dir.getFileHandle(file)\n          handle = await fileHandle.createSyncAccessHandle()\n          break\n        case 'write':\n          handle.write(cmd.data, { at: cmd.position })\n          handle.flush()\n          break\n        case 'truncate':\n          handle.truncate(cmd.size)\n          break\n        case 'abort':\n        case 'close':\n          handle.close()\n          break\n      }\n\n      port.postMessage(0)\n    }\n  }\n\n\n  globalThis.FileSystemFileHandle.prototype.createWritable = async function (options) {\n    // Safari only support writing data in a worker with sync access handle.\n    if (!workerUrl) {\n      const blob = new Blob([code.toString() + `;${code.name}();`], {\n        type: 'text/javascript'\n      })\n      workerUrl = URL.createObjectURL(blob)\n    }\n    const worker = new Worker(workerUrl, { type: 'module' })\n\n    let position = 0\n    const textEncoder = new TextEncoder()\n    let size = await this.getFile().then(file => file.size)\n\n    const send = message => new Promise((resolve, reject) => {\n      const mc = new MessageChannel()\n      mc.port1.onmessage = evt => {\n        if (evt.data instanceof Error) reject(evt.data)\n        else resolve(evt.data)\n        mc.port1.close()\n        mc.port2.close()\n        mc.port1.onmessage = null\n      }\n      worker.postMessage(message, [mc.port2])\n    })\n\n    // Safari also don't support transferable file system handles.\n    // So we need to pass the path to the worker. This is a bit hacky and ugly.\n    const root = await navigator.storage.getDirectory()\n    const parent = await wm.get(this)\n    const path = await parent.resolve(root)\n\n    // Should likely never happen, but just in case...\n    if (path === null) throw new DOMException(...GONE)\n\n    let controller\n    await send({ type: 'open', path, name: this.name })\n\n    if (options?.keepExistingData === false) {\n      await send({ type: 'truncate', size: 0 })\n      size = 0\n    }\n\n    const ws = new FileSystemWritableFileStream({\n      start: ctrl => {\n        controller = ctrl\n      },\n      async write(chunk) {\n        const isPlainObject = chunk?.constructor === Object\n\n        if (isPlainObject) {\n          chunk = { ...chunk }\n        } else {\n          chunk = { type: 'write', data: chunk, position }\n        }\n\n        if (chunk.type === 'write') {\n          if (!('data' in chunk)) {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('write requires a data argument'))\n          }\n\n          chunk.position ??= position\n\n          if (typeof chunk.data === 'string') {\n            chunk.data = textEncoder.encode(chunk.data)\n          }\n\n          else if (chunk.data instanceof ArrayBuffer) {\n            chunk.data = new Uint8Array(chunk.data)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array) && ArrayBuffer.isView(chunk.data)) {\n            chunk.data = new Uint8Array(chunk.data.buffer, chunk.data.byteOffset, chunk.data.byteLength)\n          }\n\n          else if (!(chunk.data instanceof Uint8Array)) {\n            const ab = await new Response(chunk.data).arrayBuffer()\n            chunk.data = new Uint8Array(ab)\n          }\n\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            position = chunk.position\n          }\n          position += chunk.data.byteLength\n          size += chunk.data.byteLength\n        } else if (chunk.type === 'seek') {\n          if (Number.isInteger(chunk.position) && chunk.position >= 0) {\n            if (size < chunk.position) {\n              throw new DOMException(...INVALID)\n            }\n            console.log('seeking', chunk)\n            position = chunk.position\n            return // Don't need to enqueue seek...\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('seek requires a position argument'))\n          }\n        } else if (chunk.type === 'truncate') {\n          if (Number.isInteger(chunk.size) && chunk.size >= 0) {\n            size = chunk.size\n            if (position > size) { position = size }\n          } else {\n            await send({ type: 'close' })\n            throw new DOMException(...SYNTAX('truncate requires a size argument'))\n          }\n        }\n\n        await send(chunk)\n      },\n      async close () {\n        await send({ type: 'close' })\n        worker.terminate()\n      },\n      async abort (reason) {\n        await send({ type: 'abort', reason })\n        worker.terminate()\n      },\n    })\n\n    return ws\n  }\n\n  const orig = FileSystemDirectoryHandle.prototype.getFileHandle\n  FileSystemDirectoryHandle.prototype.getFileHandle = async function (...args) {\n    const handle = await orig.call(this, ...args)\n    wm.set(handle, this)\n    return handle\n  }\n}\n\nexport default FileSystemFileHandle\nexport { FileSystemFileHandle }\n", "import FileSystemHandle from './FileSystemHandle.js'\nimport { errors } from './util.js'\n\nconst { GONE, MOD_ERR } = errors\n\nconst kAdapter = Symbol('adapter')\n\nclass FileSystemDirectoryHandle extends FileSystemHandle {\n  /** @type {FileSystemDirectoryHandle} */\n  [kAdapter]\n\n  constructor (adapter) {\n    super(adapter)\n    this[kAdapter] = adapter\n  }\n\n  /**\n   * @param {string} name Name of the directory\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the directory if don't exist\n   * @returns {Promise<FileSystemDirectoryHandle>}\n   */\n  async getDirectoryHandle (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getDirectoryHandle(name, options)\n    return new FileSystemDirectoryHandle(handle)\n  }\n\n  /** @returns {AsyncGenerator<[string, FileSystemHandle | FileSystemDirectoryHandle]>} */\n  async * entries () {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n\n    for await (const [_, entry] of this[kAdapter].entries())\n      yield [entry.name, entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)]\n  }\n\n  /** @deprecated use .entries() instead */\n  async * getEntries() {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    console.warn('deprecated, use .entries() instead')\n    for await (let entry of this[kAdapter].entries())\n      yield entry.kind === 'file'\n        ? new FileSystemFileHandle(entry)\n        : new FileSystemDirectoryHandle(entry)\n  }\n\n  /**\n   * @param {string} name Name of the file\n   * @param {object} [options]\n   * @param {boolean} [options.create] create the file if don't exist\n   */\n  async getFileHandle (name, options = {}) {\n    const {FileSystemFileHandle} = await import('./FileSystemFileHandle.js')\n    if (name === '') throw new TypeError(`Name can't be an empty string.`)\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.create = !!options.create\n    const handle = await this[kAdapter].getFileHandle(name, options)\n    return new FileSystemFileHandle(handle)\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   */\n  async removeEntry (name, options = {}) {\n    if (name === '') {\n      throw new TypeError(`Name can't be an empty string.`)\n    }\n    if (name === '.' || name === '..' || name.includes('/')) {\n      throw new TypeError(`Name contains invalid characters.`)\n    }\n    options.recursive = !!options.recursive // cuz node's fs.rm require boolean\n    return this[kAdapter].removeEntry(name, options)\n  }\n\n  async resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  async * keys () {\n    for await (const [name] of this[kAdapter].entries())\n      yield name\n  }\n\n  async * values () {\n    for await (const [_, entry] of this)\n      yield entry\n  }\n\n  [Symbol.asyncIterator]() {\n    return this.entries()\n  }\n}\n\nObject.defineProperty(FileSystemDirectoryHandle.prototype, Symbol.toStringTag, {\n\tvalue: 'FileSystemDirectoryHandle',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n})\n\nObject.defineProperties(FileSystemDirectoryHandle.prototype, {\n\tgetDirectoryHandle: { enumerable: true },\n\tentries: { enumerable: true },\n\tgetFileHandle: { enumerable: true },\n\tremoveEntry: { enumerable: true }\n})\n\nif (globalThis.FileSystemDirectoryHandle) {\n  const proto = globalThis.FileSystemDirectoryHandle.prototype\n\n  proto.resolve = async function resolve (possibleDescendant) {\n    if (await possibleDescendant.isSameEntry(this)) {\n      return []\n    }\n\n    const openSet = [{ handle: this, path: [] }]\n\n    while (openSet.length) {\n      let { handle: current, path } = openSet.pop()\n\n      for await (const entry of current.values()) {\n        if (await entry.isSameEntry(possibleDescendant)) {\n          return [...path, entry.name]\n        }\n        if (entry.kind === 'directory') {\n          openSet.push({ handle: entry, path: [...path, entry.name] })\n        }\n      }\n    }\n\n    return null\n  }\n\n  // Safari allows us operate on deleted files,\n  // so we need to check if they still exist.\n  // Hope to remove this one day.\n  async function ensureDoActuallyStillExist (handle) {\n    const root = await navigator.storage.getDirectory()\n    const path = await root.resolve(handle)\n    if (path === null) { throw new DOMException(...GONE) }\n  }\n\n  const entries = proto.entries\n  proto.entries = async function * () {\n    await ensureDoActuallyStillExist(this)\n    yield * entries.call(this)\n  }\n  proto[Symbol.asyncIterator] = async function * () {\n    yield * this.entries()\n  }\n\n  const removeEntry = proto.removeEntry\n  proto.removeEntry = async function (name, options = {}) {\n    return removeEntry.call(this, name, options).catch(async err => {\n      const unknown = err instanceof DOMException && err.name === 'UnknownError'\n      if (unknown && !options.recursive) {\n        const empty = (await entries.call(this).next()).done\n        if (!empty) { throw new DOMException(...MOD_ERR) }\n      }\n      throw err\n    })\n  }\n}\n\nexport default FileSystemDirectoryHandle\nexport { FileSystemDirectoryHandle }\n", "export const errors = {\n  INVALID: ['seeking position failed.', 'InvalidStateError'],\n  GONE: ['A requested file or directory could not be found at the time an operation was processed.', 'NotFoundError'],\n  MISMATCH: ['The path supplied exists, but was not an entry of requested type.', 'TypeMismatchError'],\n  MOD_ERR: ['The object can not be modified in this way.', 'InvalidModificationError'],\n  SYNTAX: m => [`Failed to execute 'write' on 'UnderlyingSinkBase': Invalid params passed. ${m}`, 'SyntaxError'],\n  SECURITY: ['It was determined that certain files are unsafe for access within a Web application, or that too many calls are being made on file resources.', 'SecurityError'],\n  DISALLOWED: ['The request is not allowed by the user agent or the platform in the current context.', 'NotAllowedError']\n}\n\nexport const config = {\n  writable: globalThis.WritableStream\n}\n\nexport async function fromDataTransfer (entries) {\n  console.warn('deprecated fromDataTransfer - use `dt.items[0].getAsFileSystemHandle()` instead')\n  const [memory, sandbox, fs] = await Promise.all([\n    import('./adapters/memory.js'),\n    import('./adapters/sandbox.js'),\n    import('./FileSystemDirectoryHandle.js')\n  ])\n\n  const folder = new memory.FolderHandle('', false)\n  folder._entries = entries.map(entry => entry.isFile\n    ? new sandbox.FileHandle(entry, false)\n    : new sandbox.FolderHandle(entry, false)\n  )\n\n  return new fs.FileSystemDirectoryHandle(folder)\n}\n\nexport async function getDirHandlesFromInput (input) {\n  const { FolderHandle, FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemDirectoryHandle } = await import('./FileSystemDirectoryHandle.js')\n\n  const files = Array.from(input.files)\n  const rootName = files[0].webkitRelativePath.split('/', 1)[0]\n  const root = new FolderHandle(rootName, false)\n\n  files.forEach(file => {\n    const path = file.webkitRelativePath.split('/')\n    path.shift()\n    const name = path.pop()\n\n    const dir = path.reduce((dir, path) => {\n      if (!dir._entries[path]) dir._entries[path] = new FolderHandle(path, false)\n      return dir._entries[path]\n    }, root)\n\n    dir._entries[name] = new FileHandle(file.name, file, false)\n  })\n\n  return new FileSystemDirectoryHandle(root)\n}\n\nexport async function getFileHandlesFromInput (input) {\n  const { FileHandle } = await import('./adapters/memory.js')\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n\n  return Array.from(input.files).map(file =>\n    new FileSystemFileHandle(new FileHandle(file.name, file, false))\n  )\n}\n", "import { errors } from '../util.js'\nimport config from '../config.js'\n\nconst {\n  WritableStream,\n  TransformStream,\n  DOMException,\n  Blob\n} = config\n\nconst { GONE } = errors\n// @ts-ignore - Don't match newer versions of Safari, but that's okay\nconst isOldSafari = /constructor/i.test(window.HTMLElement)\n\nexport class FileHandle {\n  constructor (name = 'unkown') {\n    this.name = name\n    this.kind = 'file'\n  }\n\n  async getFile () {\n    throw new DOMException(...GONE)\n  }\n\n  async isSameEntry(other) {\n    return this === other\n  }\n\n  /**\n   * @param {object} [options={}]\n   */\n  async createWritable (options = {}) {\n    const sw = await navigator.serviceWorker?.getRegistration()\n    const link = document.createElement('a')\n    const ts = new TransformStream()\n    const sink = ts.writable\n\n    link.download = this.name\n\n    if (isOldSafari || !sw) {\n      /** @type {Blob[]} */\n      let chunks = []\n      ts.readable.pipeTo(new WritableStream({\n        write (chunk) {\n          chunks.push(new Blob([chunk]))\n        },\n        close () {\n          const blob = new Blob(chunks, { type: 'application/octet-stream; charset=utf-8' })\n          chunks = []\n          link.href = URL.createObjectURL(blob)\n          link.click()\n          setTimeout(() => URL.revokeObjectURL(link.href), 10000)\n        }\n      }))\n    } else {\n      const { writable, readablePort } = new RemoteWritableStream(WritableStream)\n      // Make filename RFC5987 compatible\n      const fileName = encodeURIComponent(this.name).replace(/['()]/g, escape).replace(/\\*/g, '%2A')\n      const headers = {\n        'content-disposition': \"attachment; filename*=UTF-8''\" + fileName,\n        'content-type': 'application/octet-stream; charset=utf-8',\n        ...(options.size ? { 'content-length': options.size } : {})\n      }\n\n      const keepAlive = setTimeout(() => sw.active.postMessage(0), 10000)\n\n      ts.readable.pipeThrough(new TransformStream({\n        transform (chunk, ctrl) {\n          if (chunk instanceof Uint8Array) return ctrl.enqueue(chunk)\n          const reader = new Response(chunk).body.getReader()\n          const pump = _ => reader.read().then(e => e.done ? 0 : pump(ctrl.enqueue(e.value)))\n          return pump()\n        }\n      })).pipeTo(writable).finally(() => {\n        clearInterval(keepAlive)\n      })\n\n      // Transfer the stream to service worker\n      sw.active.postMessage({\n        url: sw.scope + fileName,\n        headers,\n        readablePort\n      }, [readablePort])\n\n      // Trigger the download with a hidden iframe\n      const iframe = document.createElement('iframe')\n      iframe.hidden = true\n      iframe.src = sw.scope + fileName\n      document.body.appendChild(iframe)\n    }\n\n    return sink.getWriter()\n  }\n}\n\n// Want to remove this postMessage hack, tell them u want transferable streams:\n// https://bugs.webkit.org/show_bug.cgi?id=215485\n\nconst WRITE = 0\nconst PULL = 0\nconst ERROR = 1\nconst ABORT = 1\nconst CLOSE = 2\n\nclass MessagePortSink {\n  /** @param {MessagePort} port */\n  constructor (port) {\n    port.onmessage = event => this._onMessage(event.data)\n    this._port = port\n    this._resetReady()\n  }\n\n  start (controller) {\n    this._controller = controller\n    // Apply initial backpressure\n    return this._readyPromise\n  }\n\n  write (chunk) {\n    const message = { type: WRITE, chunk }\n\n    // Send chunk\n    this._port.postMessage(message, [chunk.buffer])\n\n    // Assume backpressure after every write, until sender pulls\n    this._resetReady()\n\n    // Apply backpressure\n    return this._readyPromise\n  }\n\n  close () {\n    this._port.postMessage({ type: CLOSE })\n    this._port.close()\n  }\n\n  abort (reason) {\n    this._port.postMessage({ type: ABORT, reason })\n    this._port.close()\n  }\n\n  _onMessage (message) {\n    if (message.type === PULL) this._resolveReady()\n    if (message.type === ERROR) this._onError(message.reason)\n  }\n\n  _onError (reason) {\n    this._controller.error(reason)\n    this._rejectReady(reason)\n    this._port.close()\n  }\n\n  _resetReady () {\n    this._readyPromise = new Promise((resolve, reject) => {\n      this._readyResolve = resolve\n      this._readyReject = reject\n    })\n    this._readyPending = true\n  }\n\n  _resolveReady () {\n    this._readyResolve()\n    this._readyPending = false\n  }\n\n  _rejectReady (reason) {\n    if (!this._readyPending) this._resetReady()\n    this._readyPromise.catch(() => {})\n    this._readyReject(reason)\n    this._readyPending = false\n  }\n}\n\nclass RemoteWritableStream {\n  constructor (WritableStream) {\n    const channel = new MessageChannel()\n    this.readablePort = channel.port1\n    this.writable = new WritableStream(\n      new MessagePortSink(channel.port2)\n    )\n  }\n}\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nconst native = globalThis.showDirectoryPicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nasync function showDirectoryPicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.webkitdirectory = true\n  // Fallback to multiple files input for iOS Safari\n  input.multiple = true\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  input.style.position = 'fixed'\n  input.style.top = '-100000px'\n  input.style.left = '-100000px'\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve)\n    input.click()\n  })\n\n  return p.then(mod => mod.getDirHandlesFromInput(input))\n}\n\nexport default showDirectoryPicker\nexport { showDirectoryPicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst def = { accepts: [] }\nconst native = globalThis.showOpenFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.multiple] If you want to allow more than one file\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.accepts] Files you want to accept\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @returns {Promise<FileSystemFileHandle[]>}\n */\nasync function showOpenFilePicker (options = {}) {\n  const opts = { ...def, ...options }\n\n  if (native && !options._preferPolyfill) {\n    return native(opts)\n  }\n\n  const input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = opts.multiple\n  input.accept = (opts.accepts || [])\n    .map(e => [\n      ...(e.extensions || []).map(e => '.' + e),\n      ...e.mimeTypes || []]\n    )\n    .flat()\n    .join(',')\n\n  // See https://stackoverflow.com/questions/47664777/javascript-file-input-onchange-not-working-ios-safari-only\n  Object.assign(input.style, {\n    position: 'fixed',\n    top: '-100000px',\n    left: '-100000px'\n  })\n\n  document.body.appendChild(input)\n\n  // Lazy load while the user is choosing the directory\n  const p = import('./util.js')\n\n  await new Promise(resolve => {\n    input.addEventListener('change', resolve, { once: true })\n    input.click()\n  })\n  input.remove()\n\n  return p.then(m => m.getFileHandlesFromInput(input))\n}\n\nexport default showOpenFilePicker\nexport { showOpenFilePicker }\n", "/** @typedef {import('./FileSystemFileHandle.js').default} FileSystemFileHandle */\n\nconst native = globalThis.showSaveFilePicker\n\n/**\n * @param {Object} [options]\n * @param {boolean} [options.excludeAcceptAllOption=false] Prevent user for selecting any\n * @param {Object[]} [options.types] Files you want to accept\n * @param {string} [options.suggestedName] the name to fall back to when using polyfill\n * @param {string} [options._name] the name to fall back to when using polyfill\n * @param {boolean} [options._preferPolyfill] If you rather want to use the polyfill instead of the native\n * @return {Promise<FileSystemFileHandle>}\n */\nasync function showSaveFilePicker (options = {}) {\n  if (native && !options._preferPolyfill) {\n    return native(options)\n  }\n\n  if (options._name) {\n    console.warn('deprecated _name, spec now have `suggestedName`')\n    options.suggestedName = options._name\n  }\n\n  const { FileSystemFileHandle } = await import('./FileSystemFileHandle.js')\n  const { FileHandle } = await import('./adapters/downloader.js')\n  return new FileSystemFileHandle(new FileHandle(options.suggestedName))\n}\n\nexport default showSaveFilePicker\nexport { showSaveFilePicker }\n", "/** @typedef {import('./FileSystemDirectoryHandle.js').default} FileSystemDirectoryHandle */\n\nif (globalThis.DataTransferItem && !DataTransferItem.prototype.getAsFileSystemHandle) {\n  DataTransferItem.prototype.getAsFileSystemHandle = async function () {\n    const entry = this.webkitGetAsEntry()\n    const [\n      { FileHandle, FolderHandle },\n      { FileSystemDirectoryHandle },\n      { FileSystemFileHandle }\n    ] = await Promise.all([\n      import('./adapters/sandbox.js'),\n      import('./FileSystemDirectoryHandle.js'),\n      import('./FileSystemFileHandle.js')\n    ])\n\n    return entry.isFile\n      ? new FileSystemFileHandle(new FileHandle(entry, false))\n      : new FileSystemDirectoryHandle(new FolderHandle(entry, false))\n  }\n}\n\n/**\n * @param {object=} driver\n * @return {Promise<FileSystemDirectoryHandle>}\n */\nasync function getOriginPrivateDirectory (driver, options = {}) {\n  if (!driver) {\n    return globalThis.navigator?.storage?.getDirectory() || globalThis.getOriginPrivateDirectory()\n  }\n  const {FileSystemDirectoryHandle} = await import('./FileSystemDirectoryHandle.js')\n  const module = await driver\n  const sandbox = await (module.default\n    ? module.default(options)\n    : module(options)\n  )\n  return new FileSystemDirectoryHandle(sandbox)\n}\n\nexport default getOriginPrivateDirectory\n", "import showDirectoryPicker from './showDirectoryPicker.js'\nimport showOpenFilePicker from './showOpenFilePicker.js'\nimport showSaveFilePicker from './showSaveFilePicker.js'\nimport getOriginPrivateDirectory from './getOriginPrivateDirectory.js'\n// FileSystemWritableFileStream must be loaded before FileSystemFileHandle\nimport FileSystemWritableFileStream from './FileSystemWritableFileStream.js'\nimport FileSystemDirectoryHandle from './FileSystemDirectoryHandle.js'\nimport FileSystemFileHandle from './FileSystemFileHandle.js'\nimport FileSystemHandle from './FileSystemHandle.js'\n\nexport {\n  FileSystemDirectoryHandle,\n  FileSystemFileHandle,\n  FileSystemHandle,\n  FileSystemWritableFileStream,\n  getOriginPrivateDirectory,\n  showDirectoryPicker,\n  showOpenFilePicker,\n  showSaveFilePicker\n}\n"],
  "mappings": "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",
  "names": ["Blob", "DOMException", "FileHandle", "FolderHandle", "DISALLOWED", "Sink", "INVALID", "SYNTAX", "GONE", "kAdapter", "FileSystemDirectoryHandle", "GONE", "MOD_ERR", "kAdapter", "FileSystemFileHandle", "config", "fs", "FolderHandle", "FileHandle", "FileSystemDirectoryHandle", "dir", "path", "FileSystemFileHandle", "FileHandle", "WritableStream", "DOMException", "Blob", "GONE", "native", "e", "native", "FileSystemFileHandle", "FileHandle", "FileHandle", "FolderHandle", "FileSystemDirectoryHandle", "FileSystemFileHandle"]
}
